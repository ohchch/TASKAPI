{
	"info": {
		"_postman_id": "98489910-b6e3-4e68-9fa7-c81728baca0a",
		"name": "Task Management API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36876778"
	},
	"item": [
		{
			"name": "User test",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"User object schema is valid\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData.user).to.be.an('object');\r",
									"  pm.expect(responseData.user.id).to.be.a('number');\r",
									"  pm.expect(responseData.user.username).to.be.a('string');\r",
									"  pm.expect(responseData.user.email).to.be.a('string');\r",
									"  pm.expect(responseData.user.tasks).to.be.an('array');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"testuser\",\r\n    \"password\": \"password123\",\r\n    \"email\": \"testuser@example.com\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"testuser\",\r\n    \"password\": \"password123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/users/13?id=12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"13"
							],
							"query": [
								{
									"key": "id",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"updateduser\",\r\n    \"password\": \"newpassword123\",\r\n    \"email\": \"updateduser@example.com\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/users/1?id=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"1"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task test",
			"item": [
				{
					"name": "createTask",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"New Task Title\",\r\n  \"description\": \"New Task Description\",\r\n  \"category\": \"Work\",\r\n  \"priority\": \"High\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/tasks?userId=13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "userId",
									"value": "13"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getTasks",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "getTaskById",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "updateTask",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Updated Task Title\",\r\n  \"description\": \"Updated Task Description\",\r\n  \"category\": \"Personal\",\r\n  \"priority\": \"Medium\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/tasks/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks",
								"{id}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateTaskPriority",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"priority\": \"Low\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/tasks/{id}/priority",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks",
								"{id}",
								"priority"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteTask",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const xml2js = require('xml2js');\r",
									"\r",
									"pm.test(\"Response status code is 204\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required Content-Type header\", function () {\r",
									"    console.log(\"Content-Type header:\", pm.response.headers.get(\"Content-Type\"));\r",
									"    pm.expect(pm.response.headers.has(\"Content-Type\")).to.be.true;\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/xml\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is null\", function () {\r",
									"    xml2js.parseString(pm.response.text(), { explicitArray: false }, function (err, result) {\r",
									"        if (err) {\r",
									"            pm.expect.fail(\"Failed to parse XML response\");\r",
									"        } else {\r",
									"            pm.expect(result).to.be.null;\r",
									"        }\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Response body schema is as expected\", function () {\r",
									"    xml2js.parseString(pm.response.text(), { explicitArray: false }, function (err, result) {\r",
									"        if (err) {\r",
									"            pm.expect.fail(\"Failed to parse XML response\");\r",
									"        } else {\r",
									"            pm.expect(result).to.be.null;\r",
									"        }\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/tasks/15",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tasks",
								"15"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}